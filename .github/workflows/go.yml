# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Install Dependencies
      run: |
        brew tap messense/macos-cross-toolchains
        brew install aarch64-unknown-linux-gnu
    - name: Build
      env:
        CC: aarch64-unknown-linux-gnu-gcc
      run: |
        cd src 
        CGO_ENABLED=1 GOOS=linux GOARCH=arm64   go build -o agent-linux-arm main.go
#        CGO_ENABLED=1 GOOS=linux GOARCH=amd64 CC=x86_64-linux-musl-gcc  CXX=x86_64-linux-musl-g++ go build -o agent-linux-amd main.go

    - name: Upload agent-arm to  r2
      id: upload-release-artifact-arm
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.R2_NEW_TOKNE }}
        file: ./src/agent-linux-arm
        asset_name: agent-linux-v2.0-arm
        repo_name: Zzzjm1919/r2

    - name: Upload agent-x64 to  r2
      id: upload-release-artifact-amd
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.R2_NEW_TOKNE }}
        file: ./src/agent-linux-amd
        asset_name: agent-linux-v2.0-amd
        repo_name: Zzzjm1919/r2
